name: Terraform Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

# Prevent concurrent runs
concurrency:
  group: terraform-deployment
  cancel-in-progress: false

jobs:
  terraform:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Prevent endless runs

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
      TERRAFORM_VER: 1.12.0
      TERRAFORM_PATH: ./App

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VER }}

      - name: Terraform Init
        working-directory: ${{ env.TERRAFORM_PATH }}
        run: terraform init

      - name: Create Variables File
        working-directory: ${{ env.TERRAFORM_PATH }}
        run: |
          cat > terraform.tfvars <<EOF
          additional_domain_name = "${{ vars.ADDITIONAL_DOMAIN_NAME || '' }}"
          certificate_domain_name = "${{ vars.CERTIFICATE_DOMAIN_NAME || '' }}"
          db_username = "${{ secrets.DB_USERNAME || 'admin' }}"
          db_password = "${{ secrets.DB_PASSWORD || 'changeme' }}"
          EOF

      - name: Terraform Validate
        working-directory: ${{ env.TERRAFORM_PATH }}
        run: terraform validate

      - name: Terraform Plan
        working-directory: ${{ env.TERRAFORM_PATH }}
        run: |
          terraform plan \
            -input=false \
            -out=tfplan

      - name: Terraform Apply
        working-directory: ${{ env.TERRAFORM_PATH }}
        run: |
          terraform apply \
            -input=false \
            -auto-approve \
            tfplan
